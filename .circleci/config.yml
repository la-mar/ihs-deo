version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2
  docker: circleci/docker@0.5.19

jobs:
  run-tests:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "poetry.lock" }}

      - run:
          name: Install Dependencies
          command: poetry install

      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs

      - run:
          name: lint
          command: poetry run pylint ihs --exit-zero --rcfile=.pylintrc

      - run:
          name: Run python tests
          command: poetry run pytest --cov=ihs tests/ --cov-report xml:./coverage/python/coverage.xml

      - codecov/upload:
          file: ./coverage/python/coverage.xml

      - store_test_results:
          path: coverage

  build-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: driftwood/ihs
          tag: $(echo ${CIRCLE_SHA1} | cut -c -7),dev
      - docker/push:
          image: driftwood/ihs
          tag: $(echo ${CIRCLE_SHA1} | cut -c -7),dev

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=${CIRCLE_TAG}
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} .

  deployment:
    # Same environment
    docker:
      - image: circleci/python:3.7
    steps:
      # Gets the code
      - checkout
        # Use `poetry publish` to Publish the package using username and password from CircleCI environment variables
        # Which can be configured inside CircleCI's interface
        # - run:
        #     name: Push to PyPI
        #     command: |
        #       poetry publish --build --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}" --no-interaction

workflows:
  version: 2.1

  deployment:
    jobs:
      - run-tests:
          context: global
      - build-image:
          context: global
      - publish-github-release:
          context: global
          requires:
            - run-tests
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              only: master
      - docker/publish:
          image: driftwood/ihs
          tag: latest, ${CIRCLE_TAG}
          requires:
            - run-tests
            - build-image
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              only: master
