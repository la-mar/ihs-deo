version: ~> 1.0
sudo: required
dist: xenial
language: python

python:
  - "3.7"

# run unit tests
# Build image
# smoke test
# integration test
# deploy

# stages:
#   - lint
#   - unittest
# - name: deploy
#   if: tag IS present

notifications:
  email:
    on_failure: always
    recipients:
      - brock@driftwoodenergy.com

cache:
  directories:
    - "$HOME/.cache/pip"

services:
  - docker
  - mongodb
  - redis

env:
  global:
    - PYCURL_SSL_LIBRARY=openssl
    - GIT_COMMITTED_AT=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then git log -1 --pretty=format:%ct; else git log -1 --skip 1 --pretty=format:%ct; fi)
    - IMAGE_NAME: driftwood/ihs
    # - PATH=$HOME/.local/bin:$PATH
    # - PATH "/root/.poetry/bin:/opt/venv/bin:${PATH}"

before_install:
  - pip install awscli
  - pip install boto3
  - pip install poetry
  - pip install docker
  # - pip install pre-commit

install:
  - poetry install -v

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

  # - poetry run pre-commit install-hooks
  # - poetry run pre-commit run --all-files

# script:
#   - poetry run pytest --doctest-modules --cov-report term-missing --cov-report html:htmlcov --cov=src/cltkv1 src/cltkv1/ tests

script:
  - pylint ihs --exit-zero $PYLINT_ARGS
  - make run-tests

after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

after_success:
  - codecov

deploy:
  # deploy to github releases on git tag
  - provider: releases
    skip_cleanup: true
    target_commitish: master
    name: ihs
    tag_name: $TRAVIS_TAG
    on:
      tags: true
  # push docker image on git tag
  - provider: script
    script: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && docker push $IMAGE_NAME:latest && docker push IMAGE_NAME:$TRAVIS_TAG
    on:
      branch: master
      tags: true
  # push dev docker image
  - provider: script
    script: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && docker push $IMAGE_NAME:dev
    on:
      branch: master
